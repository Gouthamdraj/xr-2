Perfect, that’s an easy update!
Requirement:

When the app launches (after permissions), voice recognition starts automatically.

User can use voice commands at any time without needing to click “Start Voice”.

The UI “Start Voice” and “Stop Voice” buttons should still work if the user wants to manually control listening.

How to do this:
Just add a call to startVoiceRecognition() at the end of your initAndLaunchApp() function.

Your new initAndLaunchApp() function:
Replace your current initAndLaunchApp() with this:

kotlin
Copy
Edit
private fun initAndLaunchApp() {
    voiceRecognitionPermissionGranted = true

    setContent {
        NativeXREmulatorTheme {
            EmulatorUI(
                onStartStream = { sendControlCommand("start_stream") },
                onStopStream = { sendControlCommand("stop_stream") },
                onMute = { sendControlCommand("mute") },
                onUnmute = { sendControlCommand("unmute") },
                onHideVideo = { sendControlCommand("hide_video") },
                onShowVideo = { sendControlCommand("show_video") },
                onStartVoiceRecognition = { startVoiceRecognition() },
                onStopVoiceRecognition = { stopVoiceRecognition() },
                messages = _messages,
                streamUrl = "",
                onSendMessage = { text, urgent -> sendMessage(text, urgent) },
                webrtcStreamer = webrtcStreamer,
                lastRecognizedCommand = lastRecognizedCommand
            )
        }
    }
    startConnection()
    // -----> This line starts voice recognition on app launch
    startVoiceRecognition()
}
No other code needs to change.

Voice recognition will now start immediately when your app launches.

The Start/Stop Voice buttons will still work (in case user wants to pause/resume listening).

Let me know if you want the full file pasted, or if you want me to add an on-screen status indicator (“Voice recognition active” etc)!